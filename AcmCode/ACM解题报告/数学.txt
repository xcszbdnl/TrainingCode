hdu 4861:有n个球，对于第i个球的价值为 1 ^ i + 2 ^ i + ... + (p - 1) ^ i mod p
打表，发现基本上所有球的价值都是0或者p - 1，当为p - 1的时候当且仅当i % p - 1 == 0
所以看n中有多少个p - 1，如果为奇数，则胜，否则负

hdu4864:每个任务有一个完成时候和等级，机器也是一样，那么首先任务按照时间排序，机器也按照时间排序。
对于每个任务找到时间满足要求且等级最低的，发现等级只有100，那么如果时间满足要求，在对应的等级上+1即可，然后从0找到100，找到
第一个对应等级有机器的等级，该任务就可以被完成。

hdu4882:发现相邻两个问题如果ei / ki > ej / kj交换的话，罚时会被少，那么按照ei / ki排序即可。

codeforces_105_d:概率dp,dp[a][b]表示王子赢的概率即可。

sgu495: 用dp[i]表示进行到第i步期望剩下的盒子数，那么dp[i] = dp[i - 1] - dp[i - 1] / n;

zoj 3380:用1-n去填m个位置，至少有l个相同的概率。用反正去表示，找到至多有l - 1个方法数相同的，因为反面易于表示。
用dp[i][j]表示用前i个数去填前j个位置，那么对于当前数i，可以填0个，填1个...填l - 1个。
转移方程为dp[i][j] = dp[i][j] + dp[i - 1][j - k] * C(m - (j - k), k).还要从m - (j - k)位置出来选k个。

zoj 3415:用dp[i]表示i滴血的期望，那么dp[i] = 1 / m * (dp[i + 1] + 1) + ((m -1) / m * dp[i - 1] + 1)
得到n个式子。注意dp[n] = 1 / m * (dp[n] + 1) + ((m - 1) / m * dp[i - 1] + 1)
化简计算得到公式

hdu 4870:用f(i,j)表示较大分数为i,较小分数为j时的期望，那么f(i,j) = p * f(i, j + 1) + (1 - p) * f(i, j - 2)
高斯消元去解。

hdu 3853: dp[i][j]表示从1,1到达i,j的期望。那么dp[i][j] = p1 * dp[i + 1][j] + p2 * dp[i][j + 1] + p3 * dp[i][j] + 2
坑是如果i,j停留在i,j的概率是1,那么期望为0